####################     nginx conf by zj     #################


user nobody nobody;

# CPU 的亲源等
    worker_processes  auto;
    worker_cpu_affinity  auto;
    # after 1.9.10 nginx

    worker_rlimit_nofile 100000;
    # ulimit -n 关联

    worker_priority -20;

    # worker 退出时间
    worker_shutdown_timeout 600s;

events {
    use epoll;
    accept_mutex off;   #关闭惊群
    worker_connections 65535; #根据你的机器配置
    multi_accept on;
    # 内核 3.9 以上(centos 7+)
    # 配置 reuseport 会 互斥 该参数 accept_mutex;

    # 特定ip来的请求进行 debug 日志记录
    # debug_connection 101.38.143.18;
}

#错误日志处理
    #error_log logs/error.log crit;
    #error_log logs/error.log debug;
    #编译 增加 --with-debug
    #error_log  logs/error.log notice;
    #error_log  syslog:server=172.21.244.165:60514,facility=local7,tag=nginx_err,severity=error;
    error_log logs/error.log;

# 4层代理配置
stream{
    log_format basic '$remote_addr:$remote_port [$time_local] '
                 '$server_addr:$server_port '
                 '$protocol $status $bytes_sent $bytes_received '
                 '$session_time';
    access_log off;
    # access_log logs/stream.log basic buffer=32768 flush=3;
    # access_log syslog:server=172.21.244.165:60514 basic;
    open_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;
    include firewall.conf;
    include stream/*.conf;
}

# 7层代理配置
http {

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' '';
    }

    ###  增加 时间 变量
        map $time_iso8601 $logdate {
            '~^(?<ymd>\d{4}-\d{2}-\d{2})' $ymd; ## 这个是 年/月/日
            #'~^(?<ymd>\d{4}-\d{2}-\d{2}T\d{2})' $ymd;
            default 'date-not-found';
        }

    ###  log处理
        log_format  jsonlog '{'
            '"host": "$host",'
            '"server_addr": "$server_addr",'
            '"remote_addr":"$remote_addr",'
            '"time_local":"$time_local",'
            '"request":"$request",'
            '"request_id":"$request_id",'
            '"status":$status,'
            '"request_length":$request_length,'
            '"bytes_sent":$bytes_sent,'
            '"http_referer":"$http_referer",'
            '"http_user_agent":"$http_user_agent",'
            '"upstream_addr":"$upstream_addr",'
            '"upstream_response_time":"$upstream_response_time",'
            '"upstream_cache_status":"$upstream_cache_status",'
            '"request_time":$request_time'
        '}';

        log_format  main
            '$remote_addr - $host [$time_local] "$request" '
            '$request_time $upstream_response_time $request_id '
            '"$status" [$request_length:$bytes_sent] "$http_referer" '
            '"$http_user_agent" "$upstream_cache_status" '
            '$server_addr $upstream_addr';
        # access_log off;
        # access_log logs/$server_name-$logdate.log main buffer=32768 flush=3; # 其他 server 节点可以使用 变量 $server_name
        # access_log logs/access-$logdate.log main buffer=32768 flush=3;
        access_log logs/access.log main buffer=32768 flush=3;
        # access_log syslog:server=172.21.244.165:60514,nohostname,facility=local7,tag=nginx,severity=info main;
        open_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;

    ###  业务相关
        include       mime.types;
        #default_type  application/octet-stream;
        default_type text/html;
        charset utf-8;
        #resolver 8.8.8.8;
        #error_page   404 400        /40x.html;
        #error_page   500 502 503 504     /50x.html;
        #error_page   500 502 503 504  http://www.baidu.com;

        # header头支持下划线
        #underscores_in_headers on;

    ### Geoip2
        # 引用 geoip 相关配置
        # include geoip2.conf;

    ### IO相关

        # 建议和打开文件数一致，inactive 是指经过多长时间文件没被请求后删除缓存
        open_file_cache max=65535 inactive=60s;
        # 在inactive时间 1 次没有请求就删除
        open_file_cache_min_uses 1;
        # 这个是指多长时间检查一次缓存的有效信息
        open_file_cache_valid 60s;
        open_file_cache_errors on;
        tcp_nopush on;
        tcp_nodelay on;
        server_tokens off;
        sendfile on;


        # request time相关
        keepalive_timeout 30;
        keepalive_requests 20000;
        client_header_timeout 30;
        client_body_timeout 30;
        reset_timedout_connection on;
        send_timeout 30;

    ### gzip
        include gzip.conf;

    ### public realip.conf
        include realip.conf;

    ### 允许body大小配置
        client_max_body_size 100m;
        client_body_buffer_size 2m;

    ### 缓存相关
        client_header_buffer_size 2k;
        large_client_header_buffers 10 16k;
        #getconf PAGE_SIZE 查看系统分页 linux

    ### hash_max 相关
        # bucket_size 一般 nginx 会自动对齐 CPU 缓存，不用配置
        # server_names_hash_bucket_size 128;
        server_names_hash_max_size 20480;

        # bucket_size 一般 nginx 会自动对齐 CPU 缓存，不用配置
        # proxy_headers_hash_bucket_size 128;
        proxy_headers_hash_max_size 20480;

    ###  反向代理缓存处理
        proxy_cache_path /tmp/ngx_cache/ levels=1:2 keys_zone=my_cache:500m max_size=5g inactive=60m use_temp_path=off;
        proxy_buffer_size 128k;
        proxy_buffers 8 128k;
        proxy_busy_buffers_size 128k;
        proxy_temp_file_write_size 1024k;
        # proxy time 相关
        proxy_connect_timeout    120;
        proxy_read_timeout       120;
        proxy_send_timeout       120;

    ### thread_pool 一般无需使用
        # thread_pool default threads=320 max_queue=65536;
        # aio threads=default;

    ###  mirror upstream
    upstream http_mirror {
        server 192.168.47.147;
        keepalive 32;
        keepalive_requests 100000;
        }

    ######## other ssl conf
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:200m;
        ssl_session_timeout 20m;
        ###  ticket_key
        # 用于 https session 复用的，要求 master 和所有 slave 共用一个 key;
        # 推荐 30 天更换一次
        # openssl rand -out /opt/openresty/nginx/conf/ticket.key 48/80
        # ssl_session_ticket_key ticket.key;


    ###  引用waf配置
    include waf.conf;

    # http
    server {
        listen  80 reuseport backlog=10000;
        listen  443 ssl http2 reuseport backlog=10000;
        #listen  80 backlog=10000;
        #listen  443 ssl http2 backlog=10000;
        # 内核 3.9 以上(centos 7+)
        # listen 80/443 ssl http2 reuseport;
        server_name localhost;
        root html;
        #access_log  logs/access.log main;

        ssl_certificate     /opt/openresty/openstar/conf/server.crt;
        ssl_certificate_key /opt/openresty/openstar/conf/server.key;

        #根目录
        location / {
            #default_type text/html;
            #index index.html;
            #content_by_lua 'ngx.say("system is ok") ngx.exit(200)';
            content_by_lua_block {
                       local msg = [=[{"msg":"system is ok"}]=]
                       ngx.say(msg)
                       ngx.exit(200)
               }
            #mirror /mirror;
        }

        location /mirror {
            internal;
            proxy_connect_timeout      1s;
            proxy_send_timeout         1s;
            proxy_read_timeout         1s;
            proxy_http_version 1.1;
            proxy_set_header   Host             $host;
            proxy_set_header Connection "";
            proxy_set_header   X-Forwarded-For  $remote_addr;
            proxy_set_header   WAF-TRACE-ID $request_id;
            proxy_pass http://http_mirror$request_uri;
        }

        location /down/ {
            default_type  application/octet-stream;
            allow 192.168.5.0/24;
            deny all;
            charset  utf-8;
            alias /tmp/down/;
            autoindex on;
            autoindex_exact_size   off;
            autoindex_localtime    on;
        }

    }

    include conf.d/*/*.conf;
}